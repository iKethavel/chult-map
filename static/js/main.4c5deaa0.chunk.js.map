{"version":3,"sources":["containers/ChultMap/index.js","containers/Tabs/AddNewMarker.js","containers/Tabs/AllMarkers.js","api/firebase.js","containers/Tabs/SignIn.js","api/index.js","App.js","index.js","containers/ChultMap/map.jpg"],"names":["bounds","Math","round","React","memo","onMapClick","markers","newMarkerPosition","Map","id","crs","L","CRS","Simple","maxZoom","zoom","center","style","height","width","onClick","ImageOverlay","url","chultMap","map","marker","Marker","key","position","Popup","source","description","mdParser","MarkdownIt","onSubmit","onClear","useState","newMarkerDescription","setNMD","handleDescriptionChange","useCallback","text","display","flexDirection","value","renderHTML","render","onChange","onDelete","handleDelete","firebaseAppAuth","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","providers","googleProvider","GoogleAuthProvider","createComponentWithAuth","withFirebaseAuth","DB","loading","user","signOut","signInWithGoogle","displayName","storeMarker","a","collection","add","console","error","alert","deleteMarker","markerFID","doc","delete","fetchMarkers","get","querySnapshot","forEach","entity","data","push","fid","log","navigation","title","tab","setTab","setMarkers","setNMP","useEffect","unsubscribe","onSnapshot","snapshot","markersFromDB","e","parseMarkers","handleMapClick","mapEvent","latlng","handleClearNewMarker","onAddMarker","newMarker","Date","now","nmToStore","lat","lng","then","onDeleteMarker","route","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4c5deaa0.chunk.js","sourcesContent":["import React from 'react';\nimport { Map, ImageOverlay, Marker, Popup } from 'react-leaflet'\nimport L from 'leaflet'\n\nimport chultMap from './map.jpg'\nimport ReactMarkdown from 'react-markdown'\n\n\n\nconst bounds = [[0, 0], [Math.round(1499 * 0.8), Math.round(1107 * 0.8)]];\n\nfunction ChultMap({ onMapClick, markers, newMarkerPosition }) {\n\n  return (\n\n    <Map\n      id=\"map\"\n      crs={L.CRS.Simple}\n      maxZoom={24}\n      zoom={0}\n      center={[500, 700]}\n      style={{ height: '100vh', width: '50vw' }}\n      onClick={onMapClick}\n      // onViewportChange={e => {\n      //   debugger\n      // }}\n    >\n      <ImageOverlay url={chultMap} bounds={bounds} />\n\n      {\n        markers.map(marker =>\n          <Marker key={marker.id} position={marker.position}>\n            <Popup>\n              <ReactMarkdown source={marker.description} />\n            </Popup>\n          </Marker>\n        )\n      }\n\n      {\n        newMarkerPosition &&\n        <Marker\n          position={newMarkerPosition}\n        />\n      }\n\n    </Map>\n  )\n}\n\nexport default React.memo(ChultMap)","import React, { useState, useCallback } from 'react';\n\nimport MarkdownIt from 'markdown-it'\nimport MdEditor from 'react-markdown-editor-lite'\n\n\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\n\n\nfunction AddNewMarker({ onSubmit, onClear }) {\n  const [newMarkerDescription, setNMD] = useState('')\n\n  const handleDescriptionChange = useCallback(({ text }) => {\n    setNMD(text)\n  }, [])\n\n  const handleSubmit = () => onSubmit({ newMarkerDescription })\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <button onClick={onClear}>Назад</button>\n        <h2>Новий маркер: </h2>\n      </div>\n\n      <MdEditor\n        value=\"\"\n        renderHTML={(text) => mdParser.render(text)}\n        onChange={handleDescriptionChange}\n      />\n\n      <button onClick={handleSubmit}>Добавити Маркер</button>\n    </div>\n  )\n}\n\nexport default React.memo(AddNewMarker)","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nfunction AllMarkers({ markers, onDelete }) {\n  const handleDelete = marker => () => { onDelete(marker) }\n\n  return (\n    <div>\n      <h2>AllMarkers</h2>\n\n      {\n        markers.map(marker =>\n          <div key={marker.id}>\n            <button onClick={handleDelete(marker)}>Delete</button>\n            <ReactMarkdown source={marker.description} />\n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nexport default React.memo(AllMarkers)","import * as firebase from 'firebase'\nimport withFirebaseAuth from 'react-with-firebase-auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCbBfRISSy3q2qT9qD_p96CvkoCSq2KPDg\",\n  authDomain: \"chult-map.firebaseapp.com\",\n  databaseURL: \"https://chult-map.firebaseio.com\",\n  projectId: \"chult-map\",\n  storageBucket: \"chult-map.appspot.com\",\n  messagingSenderId: \"643217035072\",\n  appId: \"1:643217035072:web:cc1f3717cbc060849ab4a5\",\n  measurementId: \"G-0JJX22XY3V\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst firebaseAppAuth = firebaseApp.auth();\n\n/** See the signature above to find out the available providers */\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n \n/** Create the FirebaseAuth component wrapper */\nexport const createComponentWithAuth = withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n});\n\nconst DB = firebase.firestore()\n\nexport default DB","import React from 'react'\n\nimport { createComponentWithAuth } from '../../api/firebase'\n\n\nfunction SignIn({ loading, user, signOut, signInWithGoogle }) {\n  return (\n    <div>\n      {\n        loading && <h2>Loading..</h2>\n      }\n\n      {\n        user\n          ? <h1>Hello, {user.displayName}</h1>\n          : <h1>Log in</h1>\n      }\n\n      {\n        user\n          ? <button onClick={signOut}>Sign out</button>\n          : <button onClick={signInWithGoogle}>Sign in with Google</button>\n      }\n    </div>\n  )\n}\n\nexport default createComponentWithAuth(React.memo(SignIn))","import DB from './firebase'\n\nexport const storeMarker = async marker => {\n  try {\n    await DB.collection('markers').add(marker)\n  } catch (e) {\n    console.error(e)\n    alert(e)\n  }\n}\n\nexport const deleteMarker = async markerFID => {\n  try {\n    await DB.collection('markers').doc(markerFID).delete()\n  } catch (e) {\n    console.error(e)\n    alert(e)\n  }\n}\n\nexport const fetchMarkers = async () => {\n  try {\n    const querySnapshot = await DB.collection('markers').get()\n\n    const markers = []\n    querySnapshot.forEach(doc => {\n      const entity = doc.data()\n      markers.push({ fid: doc.id, ...entity })\n    })\n    console.log('MARKERS: ', markers)\n    return markers\n  } catch (e) {\n    console.error(e)\n    alert(e)\n  }\n}\n\nexport const parseMarkers = (querySnapshot) => {\n  try {\n    // const querySnapshot = await DB.collection('markers').get()\n\n    const markers = []\n    querySnapshot.forEach(doc => {\n      const entity = doc.data()\n      markers.push({ fid: doc.id, ...entity })\n    })\n    console.log('MARKERS: ', markers)\n    return markers\n  } catch (e) {\n    console.error(e)\n    alert(e)\n  }\n}","import React, { useState, useEffect, useCallback } from 'react';\n\nimport './App.css'\nimport 'react-markdown-editor-lite/lib/index.css';\n\n\nimport ChultMap from './containers/ChultMap';\nimport AddNewMarker from './containers/Tabs/AddNewMarker';\nimport AllMarkers from './containers/Tabs/AllMarkers';\nimport SignIn from './containers/Tabs/SignIn';\n\nimport {\n  storeMarker,\n  deleteMarker,\n  fetchMarkers,\n  parseMarkers\n} from './api'\nimport DB, { createComponentWithAuth } from './api/firebase'\n\nconst navigation = [\n  {\n    title: 'Markers',\n    tab: 'markers'\n  },\n  {\n    title: 'Sign in',\n    tab: 'sign_in'\n  },\n]\n\nfunction App({ loading, user }) {\n  const [tab, setTab] = useState(navigation[0].tab)\n\n  const [markers, setMarkers] = useState([])\n  const [newMarkerPosition, setNMP] = useState(null)\n\n  useEffect(() => {\n    const unsubscribe = DB.collection('markers')\n      .onSnapshot(function (snapshot) {\n        const markersFromDB = parseMarkers(snapshot)\n\n        setMarkers(markersFromDB)\n      }, function (error) {\n        console.error(error)\n      });\n\n    return () => unsubscribe()\n  }, [])\n\n  if (!user && tab !== navigation[1].tab)\n    setTab(navigation[1].tab)\n\n  const handleMapClick = useCallback((mapEvent) => {\n    setNMP(mapEvent.latlng)\n  }, [])\n\n  const handleClearNewMarker = useCallback(() => {\n    setNMP(null)\n  }, [])\n\n  const onAddMarker = useCallback(({ newMarkerDescription }) => {\n    const newMarker = {\n      id: Date.now(),\n      description: newMarkerDescription,\n      position: newMarkerPosition\n    }\n\n    setMarkers([...markers, newMarker])\n\n    setNMP(null)\n\n    const nmToStore = { ...newMarker, position: [newMarkerPosition.lat, newMarkerPosition.lng] }\n\n    storeMarker(nmToStore)\n      .then(fetchMarkers)\n      .then(setMarkers)\n  }, [markers, newMarkerPosition])\n\n  const onDeleteMarker = useCallback((marker) => {\n    deleteMarker(marker.fid)\n      .then(fetchMarkers)\n      .then(setMarkers)\n  }, [])\n\n  if (loading)\n    return <h2>Loading...</h2>\n\n\n  return (\n    <div>\n\n      <ChultMap\n        onMapClick={handleMapClick}\n        markers={markers}\n        newMarkerPosition={newMarkerPosition}\n      />\n\n      <div id=\"panel\">\n        <div style={{ display: 'flex' }}>\n          {\n            navigation.map(route =>\n              <button\n                key={route.tab}\n                onClick={() => {\n                  setTab(route.tab)\n                  setNMP(null)\n                }}\n              >\n                {route.title}\n              </button>\n            )\n          }\n        </div>\n\n        {\n          user && newMarkerPosition &&\n          <AddNewMarker\n            onSubmit={onAddMarker}\n            onClear={handleClearNewMarker}\n          />\n        }\n\n        {\n          !newMarkerPosition && tab === navigation[0].tab &&\n          <AllMarkers\n            markers={markers}\n            onDelete={onDeleteMarker}\n          />\n        }\n\n        {\n          !newMarkerPosition && tab === navigation[1].tab &&\n          <SignIn />\n        }\n      </div>\n\n    </div >\n\n  );\n}\n\nexport default createComponentWithAuth(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/map.42dc2325.jpg\";"],"sourceRoot":""}